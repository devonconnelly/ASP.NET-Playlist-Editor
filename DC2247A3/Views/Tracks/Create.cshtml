@model DC2247A3.Models.TrackAddFormViewModel

@{
    ViewBag.Title = "Add new track";
}
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div>
    <h5>Complete the form, and click the Create button</h5>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row mb-3">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus"} })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.Composer, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Composer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Composer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.Milliseconds, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Milliseconds, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Milliseconds, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.Albums, "Album", htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.DropDownList("AlbumId", Model.Albums, new { @class = "form-select", size = "10" })
            @Html.ValidationMessageFor(model => model.Albums, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.Label("MediaType", htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @foreach (var mediaType in Model.MediaTypes)
            {
                <div class="form-check form-check-inline">
                    @Html.RadioButton("MediaTypeId", mediaType.Value,
                                      mediaType.Text == "MPEG audio file" ? new { @class = "form-check-input", @checked = "checked" } : new { @class = "form-check-input" })
                    @Html.Label("MediaTypeId", mediaType.Text, new { @class = "form-check-label" })
                </div>
            }
            @Html.ValidationMessageFor(model => model.MediaTypes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        <div class="col">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
